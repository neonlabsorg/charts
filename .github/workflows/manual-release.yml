name: Manual Chart Release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch or tag to deploy (e.g., main, v1.0.0)'
        required: true
        default: 'main'
        type: string
      charts_dir:
        description: 'Directory containing chart folders (e.g., ./ or charts/)'
        required: false
        default: '.'
        type: string

jobs:
  manual-release:
    permissions:
      contents: write
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout specified ref
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Install chart-releaser
        run: |
          wget https://github.com/helm/chart-releaser/releases/download/v1.8.1/chart-releaser_1.8.1_linux_amd64.tar.gz
          tar -xzf chart-releaser_1.8.1_linux_amd64.tar.gz
          mv cr /usr/local/bin/cr

      - name: Find and package all charts
        run: |
          mkdir -p .cr-release-packages
          
          CHARTS_FOUND=0
          echo "Searching for charts in: ${{ inputs.charts_dir }}"
          
          for chart_dir in "${{ inputs.charts_dir }}"/*/; do
            if [ -f "${chart_dir}/Chart.yaml" ]; then
              echo "Found chart in: ${chart_dir}"
              CHARTS_FOUND=$((CHARTS_FOUND + 1))
              
              # Update dependencies and package chart
              helm dependency update "${chart_dir}"
              helm package "${chart_dir}" --destination .cr-release-packages
            fi
          done
          
          echo "Total charts found: $CHARTS_FOUND"
          if [ $CHARTS_FOUND -eq 0 ]; then
            echo "No charts found in ${{ inputs.charts_dir }}"
            exit 1
          fi
          
          echo "Packaged charts:"
          ls -la .cr-release-packages/

      - name: Upload all chart releases
        run: |
          cr upload \
            --owner ${{ github.repository_owner }} \
            --git-repo ${{ github.event.repository.name }} \
            --package-path .cr-release-packages \
            --skip-existing=false
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update index and deploy to gh-pages
        run: |
          cr index \
            --owner ${{ github.repository_owner }} \
            --git-repo ${{ github.event.repository.name }} \
            --package-path .cr-release-packages \
            --index-path index.yaml \
            --pages-branch gh-pages \
            --push
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "## Manual Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Source**: ${{ inputs.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Charts Directory**: ${{ inputs.charts_dir }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Charts Found**: $(ls .cr-release-packages/ | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- **Packaged Charts**: $(ls .cr-release-packages/)" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed to**: gh-pages branch" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Releases**: Created for each chart" >> $GITHUB_STEP_SUMMARY 